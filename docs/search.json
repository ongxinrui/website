[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About the Author",
    "section": "",
    "text": "Affiliation: Tropical Ecology and Entomology (TEE) Lab\n\nI’m a PhD candidate at the Asian School of the Environment in NTU. I have a huge fascination with insects, particularly dung beetles. I wasn’t much of a coder until I started my PhD. Through the course of my projects and as a teaching assistant, I’ve realized my newfound appreciation to coding and data visualization.\nAs a young researcher, I hope this website serves as an encouragement that you aren’t struggling alone in your own coding journeys.\n\n\n\nPhoto by Marx Yim"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Gallery",
    "section": "",
    "text": "Dung beetle-feeding trophic networks depicting dung beetle-dung interactions in a Singapore forest fragment\n\n\n\n\n\n\nData obtained from: Ong et al. 2020\nMap of GBIF insect species records from 2001 to 2020\n\nData obtained with rgbif.\nObserved taxonomic and functional metrics for dung beetle communities attracted to baited pitfall traps and flight interception traps across three habitat types in a Bornean rainforest\n\nSource: Ong et al. 2021"
  },
  {
    "objectID": "index.html#tutorials",
    "href": "index.html#tutorials",
    "title": "Gallery",
    "section": "Tutorials",
    "text": "Tutorials\n\nIntroduction to RMarkdown"
  },
  {
    "objectID": "rmarkdown101.html",
    "href": "rmarkdown101.html",
    "title": "RMarkdown 101",
    "section": "",
    "text": "Hi class! This is a HTML output of an R Markdown document. To get started on using R Markdown, make sure that you install the rmarkdown package.\n\ninstall.packages(\"rmarkdown\")"
  },
  {
    "objectID": "rmarkdown101.html#getting-started-with-r-markdown",
    "href": "rmarkdown101.html#getting-started-with-r-markdown",
    "title": "RMarkdown 101",
    "section": "Getting started with R Markdown",
    "text": "Getting started with R Markdown\nTo create an R Markdown (.rmd file), go to File > New File > R Markdown OR simply click the little down arrow shown in the screenshot below.\n\nA pop-up window will appear and you can enter in your desired information (Title, Author, Date) and settings. For this course, please select HTML as the Default Output Format.\n\nSetting up your HTML output\nYAML - Yet Another Markup Language\nThe first customisable option for RMarkdown files is the metadata, which is the top most portion of your RMarkdown code.\nYou can also recognise it as the part that is written between a pair of three dashes. When you create a new RMarkdown file, it usually looks like this:\n\n---\ntitle: \"Assignment\"\nauthor: \"Xin Rui\"\ndate: \"2022-08-16\"\noutput: html_document\n---\n\nWhat you see above is using the YAML syntax, which you can customise. For example, the metadata below does three things:\n\nCreates an option to show/hide your code in the HTML output\nInserts a table of contents that is always on the left panel when scrolling through the HTML output\nCreates a HTML output with the flatly theme.\n\n\n---\ntitle: \"Assignment\"\nauthor: \"Xin Rui\"\ndate: \"2022-08-16\"\noutput: \n  html_document:\n    code_folding: show\n    toc: true\n    toc_float: true\n    theme: flatly\n---\n\n\n\nCode chunks and changing chunk options\nCode chunks, as the name suggests, are where you insert your codes. You can insert chunks into your markdown file with the keyboard shortcut Ctrl + Alt + I (Mac: Cmd + Option + I).\nYou can customise the options in your chunks to show/hide the information that is shown in your code. For instance, we normally hide the “messages” and “warnings” in the output since that does not value add to what you want to show.\nAs it will be madness to customise the options of every single chunk in your file, you can create a general setup chunk at the top of your file, with this code:\n\nknitr::opts_chunk$set(message = FALSE, warning = FALSE) \n# hides messages & warnings\n\nThis then sets the chunk options for every subsequent chunk in your file. If you would like to customise each individual chunk for a specific purpose, you will need to include that in the top section of that chunk (i.e. the section between the {}).\nHere are some commonly used options and what they do:\n\nAdjust figure dimensions: fig.height = \"value\"; fig.width = \"value\"\nInclude figure caption: fig.cap = \"caption\"\nShows code but does not run it: eval = FALSE (default is TRUE)\n\nYou can add labels to your code chunks to identify them, especially when its very easy to get lost in a lengthy document with loads of codes. Just remember that you cannot have two or more chunks with the same label >> This will cause an error when knitting your file.\nAs a good practice, test run each chunk to make sure your codes are working before knitting the entire file.\n\n\nMarkdown Syntax\nThe text in a Markdown is written with the Markdown syntax (i.e. Pandoc’s Markdown). Using the syntax allows us to format our text. Check out the examples below:\n\nBOLD: pair of double asterisks (**)\nitalics: pair of underscores or asterisks (* or _)\n\nHeaders are defined using the (#) sign, and can be used to create your table of contents.\n\n# First-level header\n\n## Second-level header\n\n### Third-level header\n\nThe R Markdown Cheat Sheet, which is accessible through RStudio (Help > Cheat Sheets), provides a list of commonly used syntax and other useful resources. Check out the links in the Useful Resources section too!"
  },
  {
    "objectID": "rmarkdown101.html#understanding-the-data---a-penguin-example",
    "href": "rmarkdown101.html#understanding-the-data---a-penguin-example",
    "title": "RMarkdown 101",
    "section": "Understanding the Data - A Penguin🐧 Example",
    "text": "Understanding the Data - A Penguin🐧 Example\nLoad packages & read dataset\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggfortify)\n\ndata(penguins)\n\n\nView data\nTo understand your given data set, it’s good practice to know what variables are included and the types of variables (e.g. continuous, categorical) you are dealing with. Here are some basic codes.\n\nhead(penguins) # view first 6 rows of data\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_l…¹ body_…² sex    year\n  <fct>   <fct>              <dbl>         <dbl>       <int>   <int> <fct> <int>\n1 Adelie  Torgersen           39.1          18.7         181    3750 male   2007\n2 Adelie  Torgersen           39.5          17.4         186    3800 fema…  2007\n3 Adelie  Torgersen           40.3          18           195    3250 fema…  2007\n4 Adelie  Torgersen           NA            NA            NA      NA <NA>   2007\n5 Adelie  Torgersen           36.7          19.3         193    3450 fema…  2007\n6 Adelie  Torgersen           39.3          20.6         190    3650 male   2007\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n\n\nhead() gives you a quick snapshot of your data as only the first 6 rows are presented. If you would like to see the entire dataset, you can run View().\n\nstr(penguins) # view data structure\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\nsummary(penguins) # view mean, min, max etc of each variable\n\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n                                 Mean   :43.92   Mean   :17.15  \n                                 3rd Qu.:48.50   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n                                 NA's   :2       NA's   :2      \n flipper_length_mm  body_mass_g       sex           year     \n Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n Median :197.0     Median :4050   NA's  : 11   Median :2008  \n Mean   :200.9     Mean   :4202                Mean   :2008  \n 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n Max.   :231.0     Max.   :6300                Max.   :2009  \n NA's   :2         NA's   :2                                 \n\n\nstr() and summary() are a really useful functions that tell you the types of variables and provides descriptive statistics for each variable. Now we know that this is a dataset of body measurements and traits of 3 different penguin species, collected from 3 different islands.\n\n\nData Exploration\nQ. Does body mass differ among the three penguin species?\nGraphing your data\nLet’s use a histogram to visualise the spread of body mass among the three penguin species.\n\npenguins %>% ggplot() +\n                # Set aesthetics (x, y, fill)\n                geom_histogram(aes(x = body_mass_g,\n                                   fill = species),\n                               alpha = 0.5) +\n                # Split the graph by species\n                facet_grid(rows = vars(species)) +\n                # Format axis labels\n                labs(x = \"Body Mass (g)\", y = \"Count\") +\n                # Add colours manually\n                scale_fill_manual(values = c(\"darkorange\",\n                                             \"purple\",\n                                             \"cyan4\")) +\n                # Set plot theme\n                theme_minimal() +\n                # Remove legend\n                theme(legend.position = \"none\")\n\n\n\n\nFrom the histogram, we noticed that there is a difference in body mass among the three species and the spread of data for each species is not skewed.\nShowing the numbers.\n\n# Using dplyr functions\npenguins_summary <- \n  penguins %>% \n     group_by(species) %>%\n     summarise(count = n(),\n               mean = mean(body_mass_g, na.rm = TRUE),\n               ssd = sd(body_mass_g, na.rm = TRUE)) %>%\n     mutate(se = ssd / sqrt(count),\n            lower_ci = mean - qt(1 - (0.05 / 2), count - 1) * se,\n            upper_ci = mean + qt(1 - (0.05 / 2), count - 1) * se)\n\n# Nice table output\nknitr::kable(penguins_summary)\n\n\n\n\nspecies\ncount\nmean\nssd\nse\nlower_ci\nupper_ci\n\n\n\n\nAdelie\n152\n3700.662\n458.5661\n37.19462\n3627.173\n3774.151\n\n\nChinstrap\n68\n3733.088\n384.3351\n46.60747\n3640.059\n3826.117\n\n\nGentoo\n124\n5076.016\n504.1162\n45.27097\n4986.405\n5165.627\n\n\n\n\n\nChoosing the final plot\nSince our data is not skewed, we can show the difference in means and confidence intervals of the body mass among the three penguin species.\nInstead of a boxplot (which shows the median and quartiles), we plot the means and confidence intervals:\n\npenguins_summary %>% ggplot() +\n                geom_point(aes(x = species, y = mean,\n                               colour = species),\n                           size = 3) +\n                geom_errorbar(aes(x = species,\n                                  ymin = lower_ci,\n                                  ymax = upper_ci,\n                                  colour = species),\n                              width = 0.2, size = 1) +\n                labs(x = \"Species\", y = \"Body Mass (g)\",) +\n                scale_colour_manual(values = c(\"darkorange\",\n                                             \"purple\",\n                                             \"cyan4\")) +\n                theme_minimal() +\n                theme(legend.position = \"none\")\n\n\n\n\nAnd there you have it! Bear in mind that effective data visualisation is just one part of presenting your results and you’ll need to also think about choosing the right plots depending on what analyses you used. We will be covering this throughout the course - so stay tuned! 😎"
  },
  {
    "objectID": "rmarkdown101.html#useful-resources",
    "href": "rmarkdown101.html#useful-resources",
    "title": "RMarkdown 101",
    "section": "Useful Resources",
    "text": "Useful Resources\nThere’s a huge variety of available resources on using RStudio & R Markdown and one can easily get lost in this deep rabbit hole. Here is a list of our recommended resources to get you started. We highly recommend going through at least the resources in bold. 😄\nInstalling R & RStudio\n\nhttps://www.rstudio.com/products/rstudio/download/#download\n\nUpdating R, RStudio & packages\n\nhttps://www.linkedin.com/pulse/3-methods-update-r-rstudio-windows-mac-woratana-ngarmtrakulchol\nhttps://rfortherestofus.com/2020/09/how-to-update-rstudio-r-packages/\n\nInstalling packages\n\nhttps://r-coder.com/install-r-packages/\n\nR Markdown\n\nhttps://rmarkdown.rstudio.com/lesson-1.html\nhttps://commonmark.org/help/tutorial/\nhttp://www.introductoryr.co.uk/Reproducibility/book/index.html\nhttps://bookdown.org/yihui/rmarkdown/\n\nData Visualisation\n\nhttps://www.data-to-viz.com/\nhttps://clauswilke.com/dataviz/\nhttps://ggplot2tor.com/\nhttps://www.cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/\n\nDetailed Guides to R\n\nhttps://r4ds.had.co.nz/\nhttps://ourcodingclub.github.io/tutorials"
  }
]